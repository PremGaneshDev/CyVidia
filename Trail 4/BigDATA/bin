
# # Evaluate the model on validation data using accuracy score i have actual answers 
# actual_areas = [
#    " Vulnerability assessment, Penetration Test and Red Team Exercises",
# "Vulnerability assessment, Penetration Test and Red Team Exercises",
# "Vulnerability assessment, Penetration Test and Red Team Exercises",
# "Application Security",
# "Application Security",
# "Application Security",
# "Application Security",
# "Application Security",
# "Data Security",
# "Data Security",
# "Data Security",
# "Data Security",
# "Network Management and Security",
# "Network Management and Security",
 
 
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Application Security",
# "Application Security",
# "Application Security",
# "Data Security",
# "Data Security",
# "Data Security",
# "Data Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",
# "Network Management and Security",

# "Network Management andSecurity",
# "Advanced Real-time Threat Defence and Management",
# "Anti-Phishing",
# "Anti-virus and Patch Management",
# "Application Programming Interfaces (APIs)",
# "Application Programming Interfaces (APIs)",
# "Application Security Life Cycle (ASLC)",
# "Application Security Life Cycle (ASLC)",
# "Application Security Life Cycle (ASLC)",
# "Application Security Life Cycle (ASLC)",
# "Audit Logs",
# "Maintenance, Monitoring, and Analysis of Audit Logs",
# "Authentication Framework",
# "Authentication Framework",
# "Authentication Framework",
# "Authentication Framework for Customers",
# "Authentication Framework for Customers",
# "Business Continuity Plan (BCP)",
# "Business Continuity Plan (BCP)",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "CARD PAYMENTS SECURITY",
# "Customer Education and Awareness",
# "Customer Education and Awareness",
# "Customer Protection, Awareness and Grievance Redressal Mechanism",
# "Customer Protection, Awareness and Grievance Redressal Mechanism",
# "Customer Protection, Awareness and Grievance Redressal Mechanism",
# "Data Leak prevention strategy",
# "Data Leak prevention strategy",
# "Digital Payment Security Controls",
# "Digital Payment Security Controls",
# "Digital Payment Security Controls(Card Payment)",
# "Digital Payment Security Controls(Mobile Payment)",
# "Digital Payment Security Controls(Mobile Payment)",
# "Digital Payment Security Controls(Prepaid Payment Instruments)",
# 'Employee Awareness / Training',
# "Environmental Controls",
# "Environmental Controls",
# "Expectations from C-SOC",
# "Key Responsibilities of SOC ",
# "Expectations from C-SOC",
# "Expectations from C-SOC",
# "Forensics",
# "Forensics",
# "Fraud Risk Management",
# "Fraud Risk Management",
# "Governance and Management of Security Risks",
# "Governance and Management of Security Risks",
# "Governance and Management of Security Risks",
# "Identity and Access Management",
# "Identity and Access Management",
# "Identity and Access Management",
# "Incident Response",
# "Incident Response & Management",
# "Incident Response & Management",
# "Incident Response & Management",
# "Incident Response & Management",
# "INTERNET BANKING SECURITY CONTROLS",
# "Inventory Management",
# "Inventory Management of Business IT Assets",
# "Inventory Management of Business IT Assets",
# "IT Strategy and Policy ",
# "IT Strategy and Policy ",
# "Key Responsibilities of SOC ",
# "Maintenance, Monitoring, and Analysis of Audit Logs",
# "Maintenance, Monitoring, and Analysis of Audit Logs",
# "Metrics",
# "Mobile Payments Application",
# "Mobile Payments Application",
# "Mobile Payments Application",
# "Mobile Payments Application",
# "Mobile Payments Application",
# "Network Security",
# 'Network Security',
# "Other Generic Security Controls",
# "Other Generic Security",
# "Controls",
# "Other Security Measures",
# "Other Security Measures",
# "Patch & Change Management",
# "Patch/Vulnerability & Change Management",
# "Patch/Vulnerability & Change Management",
# "Patch/Vulnerability & Change Management",
# "Periodic Testing",
# "Periodic Testing",
# "Preventing access ofunauthorised software",
# "Preventing access of unauthorised software",
# "Preventing access of unauthorised software",
# "Removable Media",
# "Removable Media",
# "Removable Media",
# "Risk based transaction monitoring",
# "Secure Configuration",
# "Secure Configuration",
# "Secure Configuration",
# "Secure Configuration",
# "Secure Configuration",
# "Secure mail and messaging systems",
# "Security Testing",
# "User Access Control",
# "User Access Control/Management",
# "User Access Control/Management",
# "User Access Control/Management",
# "User Access Control/Management",
# "User Access Control/Management",
# "User/Employee/Management Awareness",
# "User/Employee/Management Awareness",
# "User/Employee/Management Awareness",
# "User/Employee/Management Awareness",
# "Vendor Risk Management",
# "Vendor Risk Management",
# "Vendor Risk Management",
# "Vendor Risk Management",
# "Vendor/Outsourcing Risk Management",
# "Vendor/Outsourcing Risk Management",
# 'Vulnerability assessment and Penetration Test',
# "Vulnerability assessment, Penetration Test and Red Team Exercises",
# "Forensics",
# ]


# # Evaluate the model on validation data using accuracy score
# accuracy = accuracy_score(actual_areas, predicted_areas)
# print('Accuracy Score:', accuracy)
# logging.info('Accuracy Score: ' + str(accuracy))

# # Evaluate the model on validation data using classification report
# print('Classification Report:')
# print(classification_report(actual_areas, predicted_areas))
# logging.info('Classification Report: \n' + str(classification_report(actual_areas, predicted_areas)))

# # Evaluate the model on validation data using confusion matrix
# cm = confusion_matrix(actual_areas, predicted_areas)    
# print('Confusion Matrix:')
# print(cm)
# logging.info('Confusion Matrix: \n' + str(cm))









